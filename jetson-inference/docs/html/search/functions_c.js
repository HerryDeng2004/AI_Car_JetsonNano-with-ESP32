var searchData=
[
  ['lastchild_2505',['LastChild',['../classtinyxml2_1_1XMLNode.html#a9b8583a277e8e26f4cbbb5492786778e',1,'tinyxml2::XMLNode::LastChild() const'],['../classtinyxml2_1_1XMLNode.html#ad7552c8cb1dc0cb6f3bdc14a9d115dbf',1,'tinyxml2::XMLNode::LastChild()'],['../classtinyxml2_1_1XMLHandle.html#a9d09f04435f0f2f7d0816b0198d0517b',1,'tinyxml2::XMLHandle::LastChild()'],['../classtinyxml2_1_1XMLConstHandle.html#a908436124990f3d7b35cb7df20d31d9e',1,'tinyxml2::XMLConstHandle::LastChild()']]],
  ['lastchildelement_2506',['LastChildElement',['../classtinyxml2_1_1XMLNode.html#a173e9d1341bc56992e2d320a35936551',1,'tinyxml2::XMLNode::LastChildElement(const char *name=0) const'],['../classtinyxml2_1_1XMLNode.html#a1b77a8194d059665a4412ebfea276878',1,'tinyxml2::XMLNode::LastChildElement(const char *name=0)'],['../classtinyxml2_1_1XMLHandle.html#a42cccd0ce8b1ce704f431025e9f19e0c',1,'tinyxml2::XMLHandle::LastChildElement()'],['../classtinyxml2_1_1XMLConstHandle.html#a9de0475ec42bd50c0e64624a250ba5b2',1,'tinyxml2::XMLConstHandle::LastChildElement()']]],
  ['length_2507',['length',['../cudaMath_8h.html#a2fcd5057894d92219f3d8e11e6ace2ff',1,'length(float2 v):&#160;cudaMath.h'],['../cudaMath_8h.html#aa0ee40a3fc6118e9711f98a5087126b0',1,'length(float3 v):&#160;cudaMath.h'],['../cudaMath_8h.html#ad0e18f22f0bd104515d650409b5746bb',1,'length(float4 v):&#160;cudaMath.h']]],
  ['lerp_2508',['lerp',['../cudaMath_8h.html#a0c247aca1e9207d5e20ae113f2a96ba5',1,'lerp(float a, float b, float t):&#160;cudaMath.h'],['../cudaMath_8h.html#afa01684596e75b742f63e0d41a1550c4',1,'lerp(float2 a, float2 b, float t):&#160;cudaMath.h'],['../cudaMath_8h.html#a6c6e32fb99074314ba8260052d28499c',1,'lerp(float3 a, float3 b, float t):&#160;cudaMath.h'],['../cudaMath_8h.html#a6d2ec5d361f7fba020dcd34c41fd84a5',1,'lerp(float4 a, float4 b, float t):&#160;cudaMath.h']]],
  ['levelfromstr_2509',['LevelFromStr',['../group__log.html#ad4cfaba5c57f7ae9bb549326ce4842f4',1,'Log']]],
  ['leveltostr_2510',['LevelToStr',['../group__log.html#ad99543fb936b6448fc857a9db0751dc4',1,'Log']]],
  ['linkendchild_2511',['LinkEndChild',['../classtinyxml2_1_1XMLNode.html#a663e3a5a378169fd477378f4d17a7649',1,'tinyxml2::XMLNode']]],
  ['listdir_2512',['listDir',['../group__filesystem.html#gafccdab42bbe88448a26f3485e04cd6f2',1,'filesystem.h']]],
  ['loadclasscolors_2513',['loadClassColors',['../group__detectNet.html#a2c649836482b3bfe12f4ab671387aa77',1,'detectNet::loadClassColors()'],['../group__segNet.html#a218a2c71cb4d59476070385c7370f789',1,'segNet::loadClassColors()'],['../group__tensorNet.html#a7b87410f9133aea37b46979d543219b9',1,'tensorNet::LoadClassColors(const char *filename, float4 *colors, int expectedClasses, float defaultAlpha=255.0f)'],['../group__tensorNet.html#ae5dd58e2481f6c703abb9abbcfce805e',1,'tensorNet::LoadClassColors(const char *filename, float4 **colors, int expectedClasses, float defaultAlpha=255.0f)']]],
  ['loadclassinfo_2514',['loadClassInfo',['../group__detectNet.html#a5ab26d1cfb1710a826cae4473c7173f5',1,'detectNet::loadClassInfo()'],['../group__imageNet.html#a6beef2c8d0972eaadad37abc89e74f95',1,'imageNet::loadClassInfo()']]],
  ['loadclasslabels_2515',['loadClassLabels',['../group__segNet.html#a31d2bd6ddf05ce178a8e6c5b88247075',1,'segNet::loadClassLabels()'],['../group__tensorNet.html#a57cacfea82e9329c2cf776837dd00aef',1,'tensorNet::LoadClassLabels(const char *filename, std::vector&lt; std::string &gt; &amp;descriptions, int expectedClasses=-1)'],['../group__tensorNet.html#aa92022958d3a46655a5e2f2ed416e6b5',1,'tensorNet::LoadClassLabels(const char *filename, std::vector&lt; std::string &gt; &amp;descriptions, std::vector&lt; std::string &gt; &amp;synsets, int expectedClasses=-1)']]],
  ['loadengine_2516',['LoadEngine',['../group__tensorNet.html#acb8076f6ab8d13b6507140826cf438d8',1,'tensorNet::LoadEngine(const char *engine_filename, const std::vector&lt; std::string &gt; &amp;input_blobs, const std::vector&lt; std::string &gt; &amp;output_blobs, nvinfer1::IPluginFactory *pluginFactory=NULL, deviceType device=DEVICE_GPU, cudaStream_t stream=NULL)'],['../group__tensorNet.html#aaa4efe2b8d91fe914a22c87b725ac063',1,'tensorNet::LoadEngine(char *engine_stream, size_t engine_size, const std::vector&lt; std::string &gt; &amp;input_blobs, const std::vector&lt; std::string &gt; &amp;output_blobs, nvinfer1::IPluginFactory *pluginFactory=NULL, deviceType device=DEVICE_GPU, cudaStream_t stream=NULL)'],['../group__tensorNet.html#a2d6fe13696a49d61e9abfa9729153e65',1,'tensorNet::LoadEngine(nvinfer1::ICudaEngine *engine, const std::vector&lt; std::string &gt; &amp;input_blobs, const std::vector&lt; std::string &gt; &amp;output_blobs, deviceType device=DEVICE_GPU, cudaStream_t stream=NULL)'],['../group__tensorNet.html#a89755f8e4b72ead7460deed394967386',1,'tensorNet::LoadEngine(const char *filename, char **stream, size_t *size)']]],
  ['loadfile_2517',['LoadFile',['../classtinyxml2_1_1XMLDocument.html#a2ebd4647a8af5fc6831b294ac26a150a',1,'tinyxml2::XMLDocument::LoadFile(const char *filename)'],['../classtinyxml2_1_1XMLDocument.html#a5f1d330fad44c52f3d265338dd2a6dc2',1,'tinyxml2::XMLDocument::LoadFile(FILE *)']]],
  ['loadimage_2518',['loadImage',['../group__image.html#ga27eecc15662ad22366515de5cc054342',1,'loadImage(const char *filename, T **ptr, int *width, int *height):&#160;imageIO.h'],['../group__image.html#ga177a5b87ec9b79bfed324fcab2d3b8c1',1,'loadImage(const char *filename, void **output, int *width, int *height, imageFormat format):&#160;imageIO.h']]],
  ['loadimagergba_2519',['loadImageRGBA',['../group__image.html#gad9ee4cb1bfdf4efe01e2971b93118972',1,'loadImageRGBA(const char *filename, float4 **ptr, int *width, int *height):&#160;imageIO.h'],['../group__image.html#gac4fec7924987c98f8fbb40176e450e04',1,'loadImageRGBA(const char *filename, float4 **cpu, float4 **gpu, int *width, int *height):&#160;imageIO.h']]],
  ['loadkeypointcolors_2520',['loadKeypointColors',['../group__poseNet.html#a4c56eeb1542a665188f3bcba1f48dd45',1,'poseNet']]],
  ['loadmodelmanifest_2521',['LoadModelManifest',['../group__modelDownloader.html#gaa4476b06252ff64b260870d66eaa5019',1,'LoadModelManifest(const char *path=&quot;networks/models.json&quot;):&#160;modelDownloader.h'],['../group__modelDownloader.html#gaab9d397a3fdcf7d218a76cf07548e522',1,'LoadModelManifest(nlohmann::json &amp;models, const char *path=&quot;networks/models.json&quot;):&#160;modelDownloader.h']]],
  ['loadnetwork_2522',['LoadNetwork',['../group__tensorNet.html#a2e63d4670461814bd863ee0d9bd41526',1,'tensorNet::LoadNetwork(const char *prototxt, const char *model, const char *mean=NULL, const char *input_blob=&quot;data&quot;, const char *output_blob=&quot;prob&quot;, uint32_t maxBatchSize=DEFAULT_MAX_BATCH_SIZE, precisionType precision=TYPE_FASTEST, deviceType device=DEVICE_GPU, bool allowGPUFallback=true, nvinfer1::IInt8Calibrator *calibrator=NULL, cudaStream_t stream=NULL)'],['../group__tensorNet.html#a0a06ffd12b465f39160f4a6925cccd9f',1,'tensorNet::LoadNetwork(const char *prototxt, const char *model, const char *mean, const char *input_blob, const std::vector&lt; std::string &gt; &amp;output_blobs, uint32_t maxBatchSize=DEFAULT_MAX_BATCH_SIZE, precisionType precision=TYPE_FASTEST, deviceType device=DEVICE_GPU, bool allowGPUFallback=true, nvinfer1::IInt8Calibrator *calibrator=NULL, cudaStream_t stream=NULL)'],['../group__tensorNet.html#a68a6f21680ae91bc51bea376221d1c48',1,'tensorNet::LoadNetwork(const char *prototxt, const char *model, const char *mean, const std::vector&lt; std::string &gt; &amp;input_blobs, const std::vector&lt; std::string &gt; &amp;output_blobs, uint32_t maxBatchSize=DEFAULT_MAX_BATCH_SIZE, precisionType precision=TYPE_FASTEST, deviceType device=DEVICE_GPU, bool allowGPUFallback=true, nvinfer1::IInt8Calibrator *calibrator=NULL, cudaStream_t stream=NULL)'],['../group__tensorNet.html#a168c7f75c9fd6d264afd016e144f3878',1,'tensorNet::LoadNetwork(const char *prototxt, const char *model, const char *mean, const char *input_blob, const Dims3 &amp;input_dims, const std::vector&lt; std::string &gt; &amp;output_blobs, uint32_t maxBatchSize=DEFAULT_MAX_BATCH_SIZE, precisionType precision=TYPE_FASTEST, deviceType device=DEVICE_GPU, bool allowGPUFallback=true, nvinfer1::IInt8Calibrator *calibrator=NULL, cudaStream_t stream=NULL)'],['../group__tensorNet.html#a8f34a6001c2da01662b85670de9246e4',1,'tensorNet::LoadNetwork(const char *prototxt, const char *model, const char *mean, const std::vector&lt; std::string &gt; &amp;input_blobs, const std::vector&lt; Dims3 &gt; &amp;input_dims, const std::vector&lt; std::string &gt; &amp;output_blobs, uint32_t maxBatchSize=DEFAULT_MAX_BATCH_SIZE, precisionType precision=TYPE_FASTEST, deviceType device=DEVICE_GPU, bool allowGPUFallback=true, nvinfer1::IInt8Calibrator *calibrator=NULL, cudaStream_t stream=NULL)']]],
  ['loadtopology_2523',['loadTopology',['../group__poseNet.html#ab5bf5dbd5c02eea49679b68b502d7db2',1,'poseNet']]],
  ['localtoglobal_2524',['LocalToGlobal',['../group__OpenGL.html#a5d0f4c643dc9382bc3463f7178dcaeeb',1,'glWidget']]],
  ['locatefile_2525',['locateFile',['../group__filesystem.html#ga09605d11f78fcd2d936793371d1c2ccc',1,'locateFile(const std::string &amp;path):&#160;filesystem.h'],['../group__filesystem.html#ga0209cabb0f62f9cfec99a763b5a0bbd1',1,'locateFile(const std::string &amp;path, std::vector&lt; std::string &gt; &amp;locations):&#160;filesystem.h']]],
  ['lock_2526',['Lock',['../group__threads.html#ae5cb54c9c45f90e29206d5679a3b1c7f',1,'Mutex']]],
  ['lockaffinity_2527',['LockAffinity',['../group__threads.html#a786ef18c62603f0fe041e95391637740',1,'Thread']]],
  ['log_2528',['log',['../classtensorNet_1_1Logger.html#ac2a77ceaa57c5faaa0ea0d63f1a7a3cb',1,'tensorNet::Logger']]]
];
